;================================================================================================================================================================================================
;
;   ./commands/broadcast/t
;
;   This function broadcasts a message to the entire world.
;
;   Assumptions:      eax - Length of received data.
;                     esi - Pointer to descriptor associated with target socket.
;
;   Returns:          None.
;
;------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
;
;   Symbolic Cross-Referencing
;
;   argument.01.location    ./functions/aggregate.arguments/b
;
;   argument.01.size        ./functions/aggregate.arguments/b
;
;   check.admin             ./functions/check.admin/t
;
;   command.broadcast.admin ./commands/broadcast/t
;
;   send.to.world           ./functions/socket/communications/send.to.world/t
;
;   write.bad.command.error ./functions/write.bad.command.error/t
;

    command.broadcast:        call  check.admin                   ; See if the calling socket is controlled by an admin.
                              jc    command.broadcast.admin       ; If so, go run the broadcast. Otherwise...

                              call  write.bad.command.error       ; Tell the user that the command doesn't have a current analogue.

                              ret                                 ; Return to caller.

    command.broadcast.admin:  mov   eax, 00000001h                ; Tell send.to.world to work with buffered data.
                              push  dword [argument.01.location]  ; Point send.to.world to received data to be broadcast.
                              push  dword [argument.01.size]      ; Tell send.to.world the length of the data.
                              call  send.to.world                 ; Broadcast the message.

                              ret                                 ; Return to caller.
