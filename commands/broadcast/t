;================================================================================================================================================================================================
;
;   ./commands/broadcast/t
;
;   This function broadcasts a message to the entire world.
;
;   Assumptions:      eax - Length of received data.
;                     esi - Pointer to descriptor associated with target socket.
;
;   Returns:          None.
;
;------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
;
;   Symbolic Cross-Referencing
;
;   command.broadcast.l                 ./commands/broadcast/d
;
;   command.broadcast.admin             ./commands/broadcast/t
;
;   buffer.1                            ./functions/b
;
;   check.admin                         ./functions/check.admin/t
;
;   connection.descriptor.index         ./functions/main/system.check/b
;
;   send.to.world                       ./functions/socket/communications/send.to.world/t
;
;   socket.data.send.socket.descriptor  ./functions/socket/recv.from.socket/d
;   socket.data.send.buffer.l           ./functions/socket/recv.from.socket/d
;   socket.data.send.buffer.pointer     ./functions/socket/recv.from.socket/d
;
;   socket.send                         ./functions/socket/socket.send/t
;
;   socket.data.bad.command.error       ./functions/write.bad.command.error/d
;   socket.data.bad.command.error.l     ./functions/write.bad.command.error/d
;

    command.broadcast:       push eax                                                                    ; Preserve length of received data.

                             call check.admin                                                            ; See if the calling socket is controlled by an admin.
                             jc   command.broadcast.admin                                                ; If so, go run the broadcast. Otherwise...

                             pop  eax                                                                    ; Restore length of received data.

                             mov  ebx, dword [esi+connection.descriptor.index]                           ; ebx - Descriptor associated with current connection.
                             mov  dword [socket.data.send.socket.descriptor], ebx                        ; Store socket descriptor for send function. 
                             mov  dword [socket.data.send.buffer.pointer], socket.data.bad.command.error ; Point send function to message indicating that the command was bad.
                             mov  dword [socket.data.send.buffer.l], socket.data.bad.command.error.l     ; Store length of message for send function.
                             call socket.send                                                            ; Tell the user that the command doesn't have a current analogue.

                             ret                                                                         ; Return to caller.

    command.broadcast.admin: pop  eax                                                                    ; Restore length of received data.

                             mov  ecx, dword [argument.01.location]                                      ; ecx - Pointer to received command string.
                             mov  edx, dword [argument.01.size]                                          ; edx - Length of command string minus terminator(s) and command.
                             call send.to.world                                                          ; Broadcast the message.

                             ret                                                                         ; Return to caller.
