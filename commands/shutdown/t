;================================================================================================================================================================================================
;
;   ./commands/shutdown/t
;
;   This function shuts down the server from within the environment.
;
;   Assumptions:     esi - Index to active socket entry.
;
;   Returns:         None.
;
;------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
;
;   Symbolic Cross-Referencing
;
;   bail                                              ./functions/bail/t
;
;   check.admin                                       ./functions/check.admin/t
;
;   clean.socket                                      ./functions/socket/clean.socket/t
;
;   command.shutdown.admin                            ./commands/shutdown/t
;
;   command.shutdown.loop                             ./commands/shutdown/t
;
;   connection.entry.size                             ./functions/main/system.check/b
;
;   connection.table                                  ./functions/main/system.check/b
;
;   socket.number                                     ./b
;
;   send.to.world                                     ./functions/socket/communications/send.to.world/t
;
;   text.data.index.local.data.shutdown.message       ./functions/main/text.init/b
;
;   text.data.index.local.data.smoked.sockets.message ./functions/main/text.init/b
;
;   text.data.index.socket.data.shutdown.message      ./functions/main/text.init/b
;
;   write.bad.command.error                           ./functions/write.bad.command.error/t
;
;   write.console                                     ./functions/write.console/t
;

    command.shutdown:       call  check.admin                                               ; See if the calling socket is controlled by an admin.
                            jc    command.shutdown.admin                                    ; If so, go run the shutdown sequence. Otherwise...

                            call  write.bad.command.error                                   ; Tell the non-admin user that there is no such command.

                            ret                                                             ; Return to caller.

;------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

    command.shutdown.admin: push  dword [text.data.index.socket.data.shutdown.message]      ; Point send.to.world to socket shutdown message.
                            call  send.to.world                                             ; Send the shutdown message to the world.

                            push  dword [text.data.index.local.data.shutdown.message]       ; Point write.console to message indicating that shutdown has been initiated from within the
                                                                                            ; environment.
                            call  write.console                                             ; Let the admin know that shutdown has been initiated from within the environment.

                            mov   esi, connection.table                                     ; esi - Pointer to command table.
                            mov   ecx, socket.number                                        ; ecx - Number of sockets to smoke.

;------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

    command.shutdown.loop:  call  clean.socket                                              ; Smoke the current socket.
                            add   esi, connection.entry.size                                ; esi - Pointer to next victim.
                            loop  command.shutdown.loop                                     ; Go smoke the rest of the sockets.

                            push  dword [text.data.index.local.data.smoked.sockets.message] ; Point write.console to message indicating all sockets have been smoked.
                            call  write.console                                             ; Let the admin know all sockets have been smoked.

                            jmp   bail                                                      ; Unload from memory and return control to Linux.
