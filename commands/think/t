;================================================================================================================================================================================================
;
;   ./commands/think/t
;
;   This function is used by players and admins to communicate with one another.
;
;   Syntax:
;   think (target)
;
;       Broadcasts a message to the performing participant's local area, unless a target is specified, in which case it attempts to isolate a message to the target using a contest against
;       Mental Projection, with failure resulting in overflow to the participant's local area.
;
;   Assumptions:     eax - Length of received data.
;                    esi - Pointer to descriptor associated with target socket.
;
;   Returns:         None.
;
;------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
;
;   Symbolic Cross-Referencing
;
;   command.think.l           ./commands/think/d
;
;   command.think.untargetted ./commands/think/t
;
;   buffer.1                  ./functions/b
;
;   send.to.area              ./functions/socket/communications/send.to.area/t
;
;   send.to.player            ./functions/socket/communications/send.to.player/t
;

    command.think:             mov  ecx, buffer.1             ; ecx - Pointer to received command string.
                               add  ecx, command.think.l      ; ecx - Pointer to first argument for command.

                               mov  ebx, ecx                  ; ebx - Pointer to first argument for command.
                               inc  ebx                       ; ebx - Pointer to first byte of first argument.
                               cmp  byte [ebx], '"'           ; Is the first byte a quotation mark?
                               jz   command.think.untargetted ; Yes - send the message to the entire area.

                               ; Skill evaluation goes here - failure shunts to command.think.untargetted.
                                
                               ; TODO - Figure out how to get a valid connection ID from user input to send in eax.

                               call send.to.player            ; Send message to targetted player.

                               ret                            ; Return to caller.

    command.think.untargetted: mov  edx, eax                  ; edx - Length of command string minus terminator(s).
                               sub  edx, command.think.l      ; edx - Length of command string minus terminator(s) and command.
                               call send.to.area              ; Broadcast the message.

                               ret                            ; Return to caller.
