;==========================================================================================================================================================================================================================================================================================================================
;
;   messages.out
;
;   This file contains data definitions for messages to be sent on a connected socket to remote users.
;

	  socket.data.login.message		          db	"Gylf v0.0001", 0Ah, 0Dh, "Please enter your username: "								                                      ; Storage for login message.
	  socket.data.login.message.l		        equ	$-socket.data.login.message												                                                            ; Length of login message.

	  socket.data.passphrase.message		    db	"Please enter your passphrase: "											                                                        ; Storage for passphrase message.
	  socket.data.passphrase.message.l	    equ	$-socket.data.passphrase.message											                                                        ; Length of passphrase message.

	  socket.data.bad.passphrase.message	  db	"Oop. That's not it. Please call back and try again.", 0Ah, 0Dh								                                ; Storage for bad passphrase message.
	  socket.data.bad.passphrase.message.l  equ	$-socket.data.bad.passphrase.message											                                                    ; Length of message.

	  socket.data.welcome.message		        db	"Ah, a new player! Welcome.", 0Ah, 0Dh, "Please enter a string of characters to use as a passphrase: "			  ; Storage for new user welcome message.
	  socket.data.welcome.message.l		      equ	$-socket.data.welcome.message												                                                          ; Length of message.

	  socket.data.session.open.error		    db	"The server was unable to open a session for you. The administrator has been notified. Please try again "		  ; Storage for session open error message.
  						                            db	"later.", 0Ah, 0Dh
	  socket.data.session.open.error.l	    equ	$-socket.data.session.open.error											                                                        ; Length of session open error message.

	  no.connection.available			          db	"The server is currently full.", 0Ah, 0Dh										                                                  ; Storage for server currently full message.
	  no.connection.available.l		          equ	$-no.connection.available												                                                              ; Length of message.

	  prompt.message				                db	0Ah, 0Dh, "> "														                                                                    ; Storage for prompt.
	  prompt.message.l			                equ	$-prompt.message													                                                                    ; Length of message.

	  socket.data.bad.login.error		        db	"That name corresponds neither to a current participant or an egg. Please verify your credentials and try "   ; Bad login error.
  						                            db	"again.", 0Ah, 0Dh
	  socket.data.bad.login.error.l		      equ	$-socket.data.bad.login.error												                                                          ; Length of message.

	  socket.data.out.of.area.ids.message	  db	"System error: Out of area IDs. Disconnecting...", 0Ah, 0Dh								                                    ; Message indicating the server has run out of area ids.
	  socket.data.out.of.area.ids.message.l	equ	$-socket.data.out.of.area.ids.message											                                                    ; Length of message.

	  socket.data.bad.command.error		      db	"For a better idea of what you're doing, try 'help'.", 0Ah, 0Dh, "> "							                            ; Message indicating that an entered command has no current analogue.
	  socket.data.bad.command.error.l		    equ	$-socket.data.bad.command.error												                                                        ; Length of message.
	
	  socket.data.bad.help.command.error    db  "You've entered an argument for the help command that does not correspond to an existing command.", 0Ah, 0Dh  ; Message indicating that the user has entered a bad argument for the help command.
  	                                      db  "For a listing of possible help topics, just type 'help' without arguments.", 0Ah, 0Dh, 0Ah, 0Dh, "> "
    socket.data.bad.help.command.error.l  equ $-socket.data.bad.help.command.error                                                                          ; Length of message.

	  socket.data.shutdown.message		      db	"G'night, Gracie...", 0Ah, 0Dh												                                                        ; Message indicating the server is about to go down.
	  socket.data.shutdown.message.l		    equ	$-socket.data.shutdown.message												                                                        ; Length of message.

	  socket.data.second.login.error		    db	"That username is currently logged in. If this is you, disconnect from your current session and try again, "  ; Message indicating duped login.
  						                            db	"please.", 0Ah, 0Dh
	  socket.data.second.login.error.l	    equ	$-socket.data.second.login.error											                                                        ; Length of message.

	  socket.data.command.gylf.help         db  "  gylf", 0Ah, 0Dh, 0Ah, 0Dh                                                                                  ; Command gylf help message.
	                                        db  "  Syntax: gylf <primary parent> <secondary parent> <name of target profile>", 0Ah, 0Dh, 0Ah, 0Dh
	                                        db  "  The Gylf command takes three arguments; a primary parent, a secondary parent, and the name of a", 0Ah, 0Dh
	                                        db  "  profile to be created using the DNA Lab from the DNA of the supplied parents. This profile will", 0Ah, 0Dh
	                                        db  "  be created as a complete profile, without the intervening process of eggdom.", 0Ah, 0Dh, 0Ah, 0Dh
	                                        db  "  This command is, of course, restricted to administrator privileged participants."
	                                        db  0Ah, 0Dh, 0Ah, 0Dh,  "> "
	  socket.data.command.gylf.help.l       equ $-socket.data.command.gylf.help                                                                               ; Length of message.
	
	  socket.data.command.help.help         db  "  help", 0Ah, 0Dh, 0Ah, 0Dh                                                                                  ; Command help help message.
	                                        db  "  Syntax: help (command argument)", 0Ah, 0Dh, 0Ah, 0Dh
	                                        db  "  The Help command provides detailed information on the use of specific commands available to", 0Ah, 0Dh
	                                        db  "  participants. It takes an optional argument in the form of the command concerning which the", 0Ah, 0Dh
	                                        db  "  performing participant needs help.", 0Ah, 0Dh, 0Ah, 0Dh, "> "
	  socket.data.command.help.help.l       equ $-socket.data.command.help.help                                                                               ; Length of message.
	
	  socket.data.command.logout.help       db  "  logout", 0Ah, 0Dh, 0Ah, 0Dh                                                                                ; Command logout help message.
	                                        db  "  Syntax: logout", 0Ah, 0Dh, 0Ah, 0Dh
	                                        db  "  Returns a character to AI mode and disconnects the performing participant from the server.", 0Ah, 0Dh
	                                        db  0Ah, 0Dh, "> "
	  socket.data.command.logout.help.l     equ $-socket.data.command.logout.help                                                                             ; Length of message.
	
	  socket.data.command.look.help         db  "  look", 0Ah, 0Dh, 0Ah, 0Dh                                                                                  ; Command look help message.
	                                        db  "  Syntax: look (participant | object | terrain feature)", 0Ah, 0Dh, 0Ah, 0Dh
	                                        db  "  The look command by default returns information regarding the performing participant's current", 0Ah, 0Dh
	                                        db  "  area. The command may also be fed an argument - a participant, object, or terrain feature. The ", 0Ah, 0Dh
	                                        db  "  command returns obvious features of the argument, and contests Search to return non-obvious", 0Ah, 0Dh
	                                        db  "  features.", 0Ah, 0Dh, 0Ah, 0Dh, "> "
	  socket.data.command.look.help.l       equ $-socket.data.command.look.help                                                                               ; Length of message.
	
	  socket.data.command.shutdown.help     db  "  shutdown", 0Ah, 0Dh, 0Ah, 0Dh                                                                              ; Command shutdown help message.
	                                        db  "  Syntax: shutdown", 0Ah, 0Dh, 0Ah, 0Dh
	                                        db  "  The shutdown command disconnects all participants and shuts down the server. This command is", 0Ah, 0Dh
	                                        db  "  restricted to administrator privileged participants.", 0Ah, 0Dh, 0Ah, 0Dh, "> "
	  socket.data.command.shutdown.help.l   equ $-socket.data.command.shutdown.help                                                                           ; Length of message.
	
	  socket.data.command.think.help        db  "  think", 0Ah, 0Dh, 0Ah, 0Dh                                                                                 ; Command think help message.
	                                        db  "  Syntax: think <quoted message> (participant)", 0Ah, 0Dh, 0Ah, 0Dh
	                                        db  "  The think command minus the participant argument sends a message to the participant's current", 0Ah, 0Dh
	                                        db  "  area. When the participant argument is included, Mental Projection is contested to send the", 0Ah, 0Dh
	                                        db  "  message only to the named participant. If that contest fails, then the default behaviour occurs."
	                                        db  0Ah, 0Dh, 0Ah, 0Dh, "> " 
	  socket.data.command.think.help.l      equ $-socket.data.command.think.help                                                                              ; Length of message.
