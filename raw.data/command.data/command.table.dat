;====================================================================================================================================================================================================
;
;   command.table
;
;   This table associates the keywords for commands with pointers to their handlers.
;

    command.table       equ $                               ; Placeholder for beginning of command table.

                        dd  command.ai.w                    ; Pointer to table entry for command 'ai'.
                        dd  command.area.w                  ; Pointer to table entry for command 'area'.
                        dd  command.broadcast.w             ; Pointer to table entry for command 'broadcast'.
                        dd  command.dig.w                   ; Pointer to table entry for command 'dig'.
                        dd  command.egg.w                   ; Pointer to table entry for command 'egg'.
                        dd  command.gylf.w                  ; Pointer to table entry for command 'gylf'.
                        dd  command.help.w                  ; Pointer to table entry for command 'help'.
                        dd  command.logout.w                ; Pointer to table entry for command 'logout'.
                        dd  command.look.w                  ; Pointer to table entry for command 'look'.
                        dd  command.shutdown.w              ; Pointer to table entry for command 'shutdown'.
                        dd  command.think.w                 ; Pointer to table entry for command 'think'.

    number.of.commands  equ (($ - command.table) / dword.l)

    ; Everything hereafter to be migrated during code reorganization

    command.broadcast.w   db  command.broadcast.l                   ; Indicator of length of command 'broadcast'.
    command.broadcast.s   db  'broadcast'                           ; Admin command string for broadcasting a message to the entire world.
    command.broadcast.l   equ $-command.broadcast.s                 ; Length of command 'broadcast'.
    command.broadcast.p   dd  command.broadcast                     ; Pointer to handler for command 'broadcast'.
    command.broadcast.h   dd  socket.data.command.broadcast.help    ; Pointer to help message for command 'broadcast'.
    command.broadcast.h.l dd  socket.data.command.broadcast.help.l  ; Length of help message for command 'broadcast'.

    command.dig.w         db  command.dig.l                         ; Indicator of length of command 'dig'.
    command.dig.s         db  'dig'                                 ; Common command string for creating a warren.
    command.dig.l         equ $-command.dig.s                       ; Length of command 'dig'.
    command.dig.p         dd  command.dig                           ; Pointer to handler for command 'dig'.
    command.dig.h         dd  socket.data.command.dig.help          ; Pointer to help message for command 'dig'.
    command.dig.h.l       dd  socket.data.command.dig.help.l        ; Length of help message for command 'dig'.

    command.egg.w         db  command.egg.l                         ; Indicator of length of command 'egg'
    command.egg.s         db  'egg'                                 ; Admin command string for creating an egg and placing it.
    command.egg.l         equ $-command.egg.s                       ; Length of command 'egg'.
    command.egg.p         dd  command.egg                           ; Pointer to handler for command 'egg'
    command.egg.h         dd  socket.data.command.egg.help          ; Pointer to help message for command 'egg'.
    command.egg.h.l       dd  socket.data.command.egg.help.l        ; Length of help message for command 'help'.

    command.gylf.w        db  command.gylf.l                        ; Indicator fo length of command 'gylf'.
    command.gylf.s        db  'gylf'                                ; Admin command string for creating new gylf.
    command.gylf.l        equ $-command.gylf.s                      ; Length of command 'gylf'.
    command.gylf.p        dd  command.gylf                          ; Pointer to handler for command 'gylf'.
    command.gylf.h        dd  socket.data.command.gylf.help         ; Pointer to help message for command 'gylf'.
    command.gylf.h.l      dd  socket.data.command.gylf.help.l       ; Length of help message for command 'gylf'.

    command.help.w        db  command.help.l                        ; Indicator of length of command 'help'.
    command.help.s        db  'help'                                ; Common command string for displaying help information.
    command.help.l        equ $-command.help.s                      ; Length of command 'help'.
    command.help.p        dd  command.help                          ; Pointer to handler for command 'help'.
    command.help.h        dd  socket.data.command.help.help         ; Pointer to help message for command 'help'.
    command.help.h.l      dd  socket.data.command.help.help.l       ; Length of help message for command 'help'.

    command.logout.w	    db	command.logout.l	                    ; Indicator of length of command 'logout'.
    command.logout.s	    db	'logout'		                          ; Common command string for logging a participant out and returning control of their avatar to the artificial intelligence.
    command.logout.l	    equ	$-command.logout.s	                  ; Length of command 'logout'.
    command.logout.p	    dd	command.logout		                    ; Pointer to handler for command 'logout'.
    command.logout.h      dd  socket.data.command.logout.help       ; Pointer to help message for command 'logout'.
    command.logout.h.l    dd  socket.data.command.logout.help.l     ; Length of help message for command 'logout'.

    command.look.w        db  command.look.l                        ; Indicator of length of command 'look'.
    command.look.s        db  'look'                                ; Common command string for displaying information about the target argument.
    command.look.l        equ $-command.look.s                      ; Length of command 'look'.
    command.look.p        dd  command.look                          ; Pointer to handler for command 'look'.
    command.look.h        dd  socket.data.command.look.help         ; Pointer to help message for command 'look'.
    command.look.h.l      dd  socket.data.command.look.help.l       ; Length of help message for command 'look'.

    command.shutdown.w    db  command.shutdown.l                    ; Indicator of length of command 'shutdown'.
    command.shutdown.s    db  'shutdown'                            ; Admin command string for shutting down the server.
    command.shutdown.l    equ $-command.shutdown.s                  ; Length of command 'shutdown'.
    command.shutdown.p    dd  command.shutdown                      ; Pointer to handler for command 'shutdown'.
    command.shutdown.h    dd  socket.data.command.shutdown.help     ; Pointer to help message for command 'look'.
    command.shutdown.h.l  dd  socket.data.command.shutdown.help.l   ; Length of help message for command 'look'.

    command.think.w       db  command.think.l                       ; Indicator of length of command 'think'.
    command.think.s       db  'think'                               ; Common command string for communicating with other players.
    command.think.l       equ $-command.think.s                     ; Length of command 'think'.
    command.think.p       dd  command.think                         ; Pointer to handler for command 'think'.
    command.think.h       dd  socket.data.command.think.help        ; Pointer to help message for command 'think'.
    command.think.h.l     dd  socket.data.command.think.help.l      ; Length of help message for command 'think'.
