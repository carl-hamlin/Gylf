;================================================================================================================================================================================================
;
;   ./functions/main/system.check/t
;
;   This code performs checks to ensure the system is ready to go live.
;
;   Assumptions:    None.
;
;   Returns:        None.
;
;------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
;
;   Symbolic Cross-Referencing
;
;   text.data.index.local.data.system.check.done.message                ./functions/main/system.check/d
;
;   text.data.index.local.data.system.check.message                     ./functions/main/system.check/d
;
;   write.console                                                       ./functions/write.console/t
;

    system.check:                   pusha                                                                 ; Preserve caller's registers.

                                    push  dword [text.data.index.local.data.system.check.message]         ; Pointer to message indicating system check underweigh.
                                    call  write.console                                                   ; Tell the admin that a system check is underweigh.

                                    push  tops.filename                                                   ; Point open.descriptor to the tops file.
                                    call  open.descriptor                                                 ; Associate a descriptor with the tops file.

                                    push  eax                                                             ; Preserve descriptor for closing.

                                    push  eax                                                             ; Point read.descriptor to descriptor associated with tops file.
                                    push  top.egg                                                         ; Tell read descriptor to put the data at top.egg.
                                    push  (dword.l + dword.l + dword.l + dword.l)                         ; Tell read.descriptor to read all four tops.
                                    call  read.descriptor                                                 ; Populate the tops.

                                    call  close.descriptor                                                ; Disassociate the descriptor from the tops file.

                                    push  dword [text.data.index.local.data.system.check.eggs.message]    ; Pointer to message indicating that pre-check and maintenance of eggs is underweigh.
                                    call  write.console                                                   ; Tell the admin that we're performing pre-check and maintenance on eggs.

                                    sub   edx, edx                                                        ; edx - Minimum id.
                                    push  edx                                                             ; Preserve id.

                                    mov   ecx, dword [top.egg]                                            ; ecx - Top egg.
                                    inc   ecx                                                             ; ecx - Stop indicator for eggs.

;------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
;
    system.check.eggs:              cmp   edx, ecx                                                        ; Have we reached the last egg?
                                    jnz   system.check.eggs.next.check                                    ; No. Go check the next egg.

                                    push  dword [text.data.index.local.data.system.check.ghosts.message]  ; Pointer to message indicating that pre-check and maintenance of ghosts is underweigh.
                                    call  write.console                                                   ; Tell the admin that we're performing pre-check and maintenance on ghosts.

                                    pop   edx                                                             ; edx - Minimum id.
                                    push  edx                                                             ; Preserve id.

                                    mov   ecx, dword [top.ghost]                                          ; ecx - Top ghost.
                                    inc   ecx                                                             ; ecx - Stop indicator for ghosts.
                                    jmp   system.check.ghosts                                             ; Go check ghosts.

    system.check.eggs.next.check:   push  edx                                                             ; Point read.credential to the current id.
                                    push  egg.filename                                                    ; Point read.credential to the egg filename.
                                    push  e.data                                                          ; Point read.credential to e.data.
                                    push  egg_size                                                        ; Tell read.credential to read an entire egg.
                                    call  read.credential                                                 ; Read the egg credential to e.data.

                                    or    eax, eax                                                        ; Were we able to read the credential?
                                    js    system.check.eggs.next                                          ; No. Go set up for the next one.

                                    mov   dword [e.data + egg.connection.descriptor.index], 00000000h     ; Zero the connection descriptor for this credential.
                                    mov   byte  [e.data + egg.connection.status.index],           00h     ; Zero the connection status for this credential.

                                    push  edx                                                             ; Point write.credential to the current id.
                                    push  egg.filename                                                    ; Point write.credential to the egg filename.
                                    push  e.data                                                          ; Point write.credential to e.data.
                                    push  egg_size                                                        ; Tell write.credential to write an entire egg.
                                    call  write.credential                                                ; Write the egg credential at e.data.

    system.check.eggs.next:         inc   edx                                                             ; edx - Next id to check.
                                    jmp   system.check.eggs                                               ; Go check the next id.

;------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

    system.check.ghosts:            cmp   edx, ecx                                                        ; Have we reached the last ghost?
                                    jnz   system.check.ghosts.next.check                                  ; No. Go check the next ghost.

                                    push  dword [text.data.index.local.data.system.check.gylf.message]    ; Pointer to message indicating that pre-check and maintenance of gylf is underweigh.
                                    call  write.console                                                   ; Tell the admin that we're performing pre-check and maintenance on gylf.

                                    pop   edx                                                             ; edx - Minimum id.
                                    push  edx                                                             ; Preserve id.

                                    mov   ecx, dword [top.gylf]                                           ; ecx - Top gylf.
                                    inc   ecx                                                             ; ecx - Stop indicator for gylf.
                                    jmp   system.check.gylf                                               ; Go check gylf.

    system.check.ghosts.next.check: push  edx                                                             ; Point read.credential to the current id.
                                    push  ghost.filename                                                  ; Point read.credential to the ghost filename.
                                    push  d.data                                                          ; Point read.credential to d.data.
                                    push  ghost_size                                                      ; Tell read.credential to read an entire ghost.
                                    call  read.credential                                                 ; Read the ghost credential to d.data.

                                    or    eax, eax                                                        ; Were we able to read the credential?
                                    js    system.check.ghosts.next                                        ; No. Go set up for the next one.

                                    mov   dword [d.data + ghost.connection.descriptor.index], 00000000h   ; Zero the connection descriptor for this credential.
                                    mov   byte  [d.data + ghost.connection.status.index],           00h   ; Zero the connection status for this credential.

                                    push  edx                                                             ; Point write.credential to the current id.
                                    push  ghost.filename                                                  ; Point write.credential to the ghost filename.
                                    push  d.data                                                          ; Point write.credential to d.data.
                                    push  ghost_size                                                      ; Tell write.credential to write an entire ghost.
                                    call  write.credential                                                ; Write the gylf credential at d.data.

    system.check.ghosts.next:       inc   edx                                                             ; edx - Next id to check.
                                    jmp   system.check.ghosts                                             ; Go check the next id.

;------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
;
    system.check.gylf:              cmp   edx, ecx                                                        ; Have we reached the last gylf?
                                    jnz   system.check.gylf.next.check                                    ; No. Go check the next gylf.

                                    push  dword [text.data.index.local.data.system.check.logins.message]  ; Pointer to message indicating that pre-check and maintenance of logins is underweigh.
                                    call  write.console                                                   ; Tell the admin that we're performing pre-check and maintenance on logins.

                                    pop   edx                                                             ; edx - Minimum id.

                                    mov   ecx, dword [top.login]                                          ; ecx - Top login.
                                    inc   ecx                                                             ; ecx - Stop indicator for logins.
                                    jmp   system.check.logins                                             ; Go check logins.

    system.check.gylf.next.check:   push  edx                                                             ; Point read.credential to the current id.
                                    push  gylf.filename                                                   ; Point read.credential to the gylf filename.
                                    push  g.data                                                          ; Point read.credential to g.data.
                                    push  gylf_size                                                       ; Tell read.credential to read an entire gylf.
                                    call  read.credential                                                 ; Read the gylf credential to g.data.

                                    or    eax, eax                                                        ; Were we able to read the credential?
                                    js    system.check.gylf.next                                          ; No. Go set up for the next one.

                                    mov   dword [g.data + gylf.connection.descriptor.index], 00000000h    ; Zero the connection descriptor for this credential.
                                    mov   byte  [g.data + gylf.connection.status.index],           00h    ; Zero the connection status for this credential.

                                    mov   dword [top.gylf], edx                                           ; Update top.gylf.

                                    push  edx                                                             ; Point write.credential to the current id.
                                    push  gylf.filename                                                   ; Point write.credential to the gylf filename.
                                    push  g.data                                                          ; Point write.credential to g.data.
                                    push  gylf_size                                                       ; Tell write.credential to write an entire gylf.
                                    call  write.credential                                                ; Write the gylf credential at g.data.

    system.check.gylf.next:         inc   edx                                                             ; edx - Next id to check.
                                    jmp   system.check.gylf                                               ; Go check the next id.

;------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
;
    system.check.logins:            cmp   edx, ecx                                                        ; Have we reached the last login?
                                    jz    system.check.complete                                           ; Yes. Go let the admin know.

                                    push  (login.filename + dword.l)                                      ; Point convert.binary.id.to.ascii.id to login filename.
                                    push  edx                                                             ; Point convert.binary.id.to.ascii.id to the current id.
                                    call  convert.binary.id.to.ascii.id                                   ; Convert the id.

                                    mov   eax, sys.unlink                                                 ; eax - Smoke the file.
                                    mov   ebx, login.filename                                             ; ebx - Smoke the login file.
                                    int   sys.system.call                                                 ; SMOKE THAT MOTHERFUCKER!

                                    inc   edx                                                             ; edx - Next login id.
                                    jmp   system.check.logins                                             ; Go smoke the next login.

;------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
;
    system.check.complete:          mov   dword [top.login], 0                                            ; Zero top login.

                                    push  tops.filename                                                   ; Point open.descriptor to tops data.
                                    call  open.descriptor                                                 ; Associate a descriptor with the tops data.

                                    push  eax                                                             ; Preserve descriptor for closing.

                                    push  eax                                                             ; Point write.descriptor to descriptor associated with tops data.
                                    push  top.egg                                                         ; Tell write.descriptor to write the data starting at top.egg.
                                    push  (dword.l + dword.l + dword.l + dword.l)                         ; Tell write.descriptor to write all four tops.
                                    call  write.descriptor                                                ; Write the data.

                                    call  close.descriptor                                                ; Disassociate the descriptor.

                                    push  dword [text.data.index.local.data.system.check.done.message]    ; Pointer to message indicating system check is complete.
                                    call  write.console                                                   ; Tell the admin that the system check is complete.

                                    popa                                                                  ; Restore caller's registers.
                                    ret                                                                   ; Return to caller.
