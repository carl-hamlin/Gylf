;================================================================================================================================================================================================
;
;   ./functions/get.participant.data.by.name/t
;
;   This function returns participant data in g.data corresponding to a provided name, or an error in the case of an id that does not exist.
;
;   Assumptions:    Stack Frame:  dword [pointer to name to be looked up]
;
;   Returns:        [g.data] - Data for the requested participant.
;
;                   - OR -
;
;                   eax - Error.
;
;------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
;
;   Symbolic Cross-Referencing
;
;   close.descriptor                          ./functions/close.descriptor/t
;
;   convert.binary.id.to.ascii.id             ./functions/convert.binary.id.to.ascii.id/t
;
;   dword.l                                   ./b
;
;   g.data                                    ./functions/d
;
;   get.participant.data.by.name.error        ./functions/get.participant.data.by.name/t
;
;   get.participant.data.by.name.lookup.loop  ./functions/get.participant.data.by.name/t
;
;   gylf.filename                             ./functions/d  
;
;   open.descriptor                           ./functions/open.descriptor/t
;
;   read.descriptor                           ./functions/read.descriptor/t
;

    get.participant.data.by.name:             push  eax                                       ; Preserve caller's eax register.

                                              mov   ebp, esp                                  ; ebp - Pointer to stack.
                                              add   ebp, (dword.l + gpdbn.packet_size)        ; ebp - Pointer to stack frame.

                                              sub   eax, eax                                  ; eax - Prepared to represent IDs against which to look up.

    get.participant.data.by.name.lookup.loop: push  eax                                       ; Store id against which to lookup.
    
                                              push  eax                                       ; Point convert.binary.id.to.ascii.id to the next id to be looked up.
                                              push  gylf.filename + dword.l                   ; Point convert.binary.id.to.ascii.id to buffer.1.
                                              call  convert.binary.id.to.ascii.id             ; Convert the id to ASCII.

                                              push  gylf.filename                             ; Point open.descriptor to the newly created filename containing the converted id.
                                              call  open.descriptor                           ; Attempt to open the file for reading.

                                              or    eax, eax                                  ; Did we successfully open the file for reading?
                                              js    get.participant.data.by.name.error        ; NO! We're done here; restore the return address and return to sender with the error code in eax.

                                              push  eax                                       ; Store file descriptor for closing after read.

                                              push  gylf_size                                 ; Tell read.descriptor to read the whole file.
                                              push  g.data                                    ; Point read.descriptor to g.data.
                                              push  eax                                       ; Point read.descriptor to the target data file.
                                              call  read.descriptor                           ; Read that data into g.data.

                                              call  close.descriptor                          ; Close the file.

                                              pop   eax                                       ; Restore id against which to lookup.
                                              inc   eax                                       ; eax - Next id.

                                              mov   esi, dword [ebp + gpdbn.packet.id]        ; esi - Pointer to name agianst which to lookup.
                                              mov   edi, g.data + gylf.name                   ; edi - Pointer to name stored in most recent id read.

                                              repnz cmpsb                                     ; Are they the same names?

                                              jnz   get.participant.data.by.name.lookup.loop  ; NO! Go gheck the next id.
                                              
    get.participant.data.by.name.error:       pop   eax                                       ; YES! Restore eax to the correct id
                                              ret   gpdbn.packet_size                         ; Return to caller.
