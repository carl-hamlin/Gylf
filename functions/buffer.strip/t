;------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
;
;   ./functions/buffer.strip/t
;
;   This function strips the following characters from the data buffer and replaces them with zeroes:
;
;   0Ah
;   0Dh
;
;   Assumptions:  Stack Frame:  dword - Number of characters to check.
;                               dword - Pointer to buffer to be stripped.
;
;   Returns:      eax - Revised number of characters.
;                 ebx - Pointer to stripped buffer.
;
;------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
;
;   Symbolic Cross-Referencing
;
;   strip.char  ./functions/buffer.strip/t
;
;   strip.loop  ./functions/buffer.strip/t
;
;   strip.done  ./functions/buffer.strip/t
;

    buffer.strip: pop   edx             ; Preserve return address.
                  pop   ebx             ; ebx - Pointer to buffer to be stripped.
                  pop   ecx             ; ecx - Number of characters to check.

                  push  edx             ; Restore return address.

                  push  ebx             ; Save pointer to buffer.
                  mov   eax, ecx        ; eax - Running counter of valid characters.
;------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

    strip.loop:   cmp   byte [ebx], 0Ah ; Is the current character 0Ah?
                  jz    strip.char      ; Yes. Go strip it.

                  cmp   byte [ebx], 0Dh ; Is the current character 0Dh?
                  jz    strip.char      ; Yes. Go strip it.

                  inc   ebx             ; esi - Pointer to the next element in the data buffer.
                  loop  strip.loop      ; Go check the next element.

                  jmp   strip.done      ; All finished here. Go return to caller.

;------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

    strip.char:   mov   byte [ebx], 00h ; Strip the current character.
                  inc   ebx             ; esi - Pointer to the next element in the data buffer.
                  dec   eax             ; eax - Revised number of characters.
                  loop  strip.loop      ; Go check the next element.

;------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

    strip.done:   pop   ebx             ; Restore pointer to buffer.
                  ret                   ; Return to caller.
