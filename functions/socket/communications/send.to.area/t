;================================================================================================================================================================================================
;
;   ./functions/socket/communications/send.to.area/t
;
;   This function sends a provided message out to a provided area.
;
;   Assumptions:    eax - Area id to be broadcast.
;                   ebx - Pointer to message to be broadcast.
;                   edx - Length of message to be broadcast.
;
;   Returns:        None.
;
;------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
;
;   Symbolic Cross-Referencing
;
;   connection.area.id.index            ./functions/main/system.check/b
;
;   connection.entry.size               ./functions/main/system.check/b
;
;   connection.table                    ./functions/main/system.check/b
;
;   send.to.area.broadcast              ./functions/socket/communications/send.to.area/t
;
;   send.to.area.broadcast.done         ./functions/socket/communications/send.to.area/t
;
;   send.to.area.connection.poll        ./functions/socket/communications/send.to.area/t
;
;   socket.number                       ./b
;
;   socket.send.buf                     ./functions/socket/socket.send/t
;

    send.to.area:                 push  esi                                       ; Preserve caller's esi.

                                  mov   esi, connection.table                     ; esi - Pointer to table of handles associated with active connections.
                                  mov   ecx, socket.number                        ; ecx - Number of connections to poll.

    send.to.area.connection.poll: cmp   dword [esi+connection.area.id.index], eax ; Does the area id associated with this connection match the area id to be broadcast?
                                  jz    send.to.area.broadcast                    ; Yes. Go broadcast to this connection.

    send.to.area.broadcast.done:  add   esi, connection.entry.size                ; esi - Pointer to next connection handle in table.
                                  loop  send.to.area.connection.poll              ; Go check the next connection.

                                  pop   esi                                       ; Restore caller's esi.

                                  ret                                             ; Return to caller.

    send.to.area.broadcast:       push  edx                                       ; Tell send function how long the message is.
                                  push  ebx                                       ; Point send function to the message.
                                  call  socket.send.buf                           ; Send the message to the indicated descriptor.

                                  jmp   send.to.area.broadcast.done               ; Go set up for the next connection.
