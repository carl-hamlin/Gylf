;================================================================================================================================================================================================
;
;   ./functions/socket/communications/send.to.participant/t
;
;   This function sends a provided message out to a provided area.
;
;   Assumptions:    Stack frame:  dword - Length of message to be broadcast.
;                                 dword - Pointer to message to be broadcast.
;                                 dword - Area from which broadcast is being generated.
;                                 dword - Connection ID to which to broadcast.
;
;   Returns:        eax - 0 on success
;                   eax - out of area indicator if target recipient is out of area
;
;------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
;
;   Symbolic Cross-Referencing
;
;   connection.area.id.index              ./functions/main/system.check/b
;
;   connection.entry.size                 ./functions/main/system.check/b
;
;   connection.table                      ./functions/main/system.check/b
;
;   connection.number.index               ./functions/main/system.check/b
;
;   dword.l                               ./b
;
;   send.to.participant.broadcast         ./functions/socket/communications/send.to.participant/t
;
;   send.to.participant.connection.poll   ./functions/socket/communications/send.to.participant/t
;
;   send.to.participant.out.of.area.error ./functions/socket/communications/send.to.participant/t
;
;   socket.number                         ./b
;
;   socket.send.buf                       ./functions/socket/socket.send/t
;

    send.to.participant:                    pop   edx                                       ; Preserve return address.

                                            push  esi                                       ; Preserve caller's esi.

                                            mov   esi, connection.table                     ; esi - Pointer to table of handles associated with active connections.
                                            mov   ecx, socket.number                        ; ecx - Number of connections to poll.

    send.to.participant.connection.poll:    mov   eax, dword [esp+dword.l]                  ; eax - Area id to which to be broadcast.
                                            cmp   dword [esi+connection.area.id.index], ebx ; Does the area id associated with this connection match the area id to be broadcast?
                                            jnz   send.to.participant.out.of.area.error     ; No - Return out of area indicator.

                                            mov   eax, dword [esp]                          ; eax - Descriptor to which to broadcast.
                                            cmp   dword [esi+connection.number.index], eax  ; Does this descriptor correspond to the target recipient's ID?
                                            jz    send.to.participant.broadcast             ; Yes - Go broadcast the message.

    send.to.participant.broadcast.done:     add   esi, connection.entry.size                ; esi - Pointer to next connection handle in table.
                                            loop  send.to.participant.connection.poll       ; Go check the next connection.

                                            pop   esi                                       ; Restore caller's esi.

                                            ret   (dword.l * 4)                             ; Return to caller.

    send.to.participant.broadcast:          push  dword [esp+(dword.l*3)]                   ; Tell the send function how long the message is.
                                            push  dword [esp+(dword.l*2)]                   ; Point send function to the message.
                                            call  socket.send.buf                           ; Send the message to the indicated descriptor.

                                            pop   esi                                       ; Restore caller's esi.

                                            ret   (dword.l * 4)                             ; Return to caller.

    send.to.participant.out.of.area.error:  mov   eax, 0FFFFh                               ; eax - Out of area indicator

                                            pop   esi                                       ; Restore caller's esi.

                                            ret   (dword.l * 4)                             ; Return to caller.
