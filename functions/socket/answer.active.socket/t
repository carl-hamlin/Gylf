;================================================================================================================================================================================================
;
;   ./functions/socket/answer.active.socket/t
;
;   This code determines the status of an active socket and routes the data to the appropriate handler.
;
;   Assumptions:    Stack Frame:  dword [Pointer to active socket structure]
;                                 dword [Pointer to socket type]
;                                 byte  [Connection status index]
;
;   Clobbers:       eax.
;
;   Returns:        None.
;
;------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
;
;   Symbolic Cross-Referencing
;
;   No external references.
;

    answer.active.socket:                         pop   eax                                                                             ; eax - Return address.

                                                  push  address.login.status                                                            ; Set up pointer to address.login.status
                                                  push  address.passphrase.status                                                       ; Set up pointer to address.passphrase.status
                                                  push  address.set.passphrase.status                                                   ; Set up pointer to address.set.passphrase.status
                                                  push  address.active.status                                                           ; Set up pointer to address.active.status

                                                  push  00000000h                                                                       ; Reserve storage for type pointer.
                                                  push  00000000h                                                                       ; Reserve storage for id pointer.
                                                  push  00000000h                                                                       ; Reserve storage for buffer pointer.
                                                  push  00000000h                                                                       ; Reserve storage for size of buffer.
                                                  push  00000000h                                                                       ; Reserve storage for filename pointer.

                                                  push  eax                                                                             ; Restore return address.

                                                  push  ebp                                                                             ; Preserve caller's ebp.

                                                  mov   ebp, esp                                                                        ; ebp - Prepared to be used as a data pointer.
                                                  add   ebp, (dword.l + answer.active.socket.packet_size)                               ; ebp - Data pointer.

                                                  push  ebx                                                                             ; Preserve caller's ebx.
                                                  push  ecx                                                                             ; Preserve caller's ecx.

                                                  cmp   dword [ebp - answer.active.socket.packet.type], a.p.type.egg                    ; Are we dealing with an egg?
                                                  jz    answer.active.socket.egg.type                                                   ; Go set the admin display type to egg.

                                                  cmp   dword [ebp - answer.active.socket.packet.type], a.p.type.ghost                  ; Are we dealing with a ghost?
                                                  jz    answer.active.socket.ghost.type                                                 ; Go set the admin display type to ghost.

                                                  cmp   dword [ebp - answer.active.socket.packet.type], a.p.type.gylf                   ; Are we dealing with a gylf?
                                                  jz    answer.active.socket.gylf.type                                                  ; Go set the admin display type to gylf.

                                                  mov   dword [ebp - answer.active.socket.packet.tpointer], (login.filename + word.l)   ; By process of elimination, we're dealing with a login.
                                                                                                                                        ; Set the admin display type to login.
                                                  mov   dword [ebp - answer.active.socket.packet.ipointer], (login.filename + dword.l)  ; Store pointer to id.

    answer.active.socket.admin.display.type.set:  push  dword [text.data.index.local.data.active.socket.message]                        ; Pointer to socket activity notifier.
                                                  call  write.console                                                                   ; Let the admin know we're working with an active socket.

                                                  push  sys.standard.output                                                             ; Point write.descriptor to standard output.
                                                  push  dword [ebp - answer.active.socket.packet.tpointer]                              ; Point write descriptor to the socket type.
                                                  push  01h                                                                             ; Tell write descriptor to write one byte.
                                                  call  write.descriptor                                                                ; Tell the admin what type of socket we're working with.

                                                  push  sys.standard.output                                                             ; Point write.descriptor to standard output.
                                                  push  dword [ebp - answer.active.socket.packet.ipointer]                              ; Point write.descriptor to the socket id.
                                                  push  (dword.l * 2)                                                                   ; Tell write.descriptor to write one dword.
                                                  call  write.descriptor                                                                ; Tell the admin which socket we're working with.

                                                  push  dword [text.data.index.local.data.carriage.return.message]                      ; Point write.console to the carriage return.
                                                  call  write.console                                                                   ; Write a carriage return to the console.

                                                  mov   ebx, ebp                                                                        ; ebx - Prepared to be used as code pointer.
                                                  sub   ebx, dword.l                                                                    ; ebx - Further prepared to be used as code pointer.
                                                  sub   ebx, answer.active.socket.packet.statii                                         ; ebx - Pointer to potential handler.
                                                  mov   ecx, dword [ebp - answer.active.socket.packet.status]                           ; ecx - Socket status.

                                                  repnz add ebx, dword.l                                                                ; ebx - Pointer to pointer to correct handler for socket
                                                                                                                                        ; status.
                                                  mov   ebx, dword [ebx]                                                                ; ebx - Pointer to correct handler for socket status.

                                                  call  ebx                                                                             ; Go handle the data.

                                                  pop   ecx                                                                             ; Restore caller's ecx.
                                                  pop   ebx                                                                             ; Restore caller's ebx.

                                                  pop   ebp                                                                             ; Restore caller's ebp.

                                                  ret   answer.active.socket.packet_size                                                ; Return to caller.

;------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

    answer.active.socket.egg.type:                mov   dword [ebp - answer.active.socket.packet.tpointer], (egg.filename + word.l)     ; Set the admin display type to egg.
                                                  mov   dword [ebp - answer.active.socket.packet.ipointer], (egg.filename + dword.l)    ; Store pointer to id.
                                                  jmp   answer.active.socket.admin.display.type.set                                     ; Go tell the admin we have activity on a socket.

;------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

    answer.active.socket.ghost.type:              mov   dword [ebp - answer.active.socket.packet.tpointer], (ghost.filename + word.l)   ; Set the admin display type to egg.
                                                  mov   dword [ebp - answer.active.socket.packet.ipointer], (ghost.filename + dword.l)  ; Store pointer to id.
                                                  jmp   answer.active.socket.admin.display.type.set                                     ; Go tell the admin we have activity on a socket.

;------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

    answer.active.socket.gylf.type:               mov   dword [ebp - answer.active.socket.packet.tpointer], (gylf.filename + word.l)    ; Set the admin display type to egg.
                                                  mov   dword [ebp - answer.active.socket.packet.ipointer], (gylf.filename + dword.l)   ; Store pointer to id.
                                                  jmp   answer.active.socket.admin.display.type.set                                     ; Go tell the admin we have activity on a socket.
