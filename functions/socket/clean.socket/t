;================================================================================================================================================================================================
;
;   ./functions/socket/clean.socket/t
;
;   This code removes the data associated with an active socket from memory, smokes the lock file, and uses the close.descriptor function to close out the socket. This function does not
;   closeout other files associated with the socket - that responsibility is left to the caller.
;
;   Assumptions:    Stack Frame:  dword [pointer to socket collection]
;                                 dword [socket in need of cleaning]
;
;   Returns:        eax - Error status.
;
;------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
;
;   Symbolic Cross-Referencing
;
;   No external references.
;

    clean.socket:       mov   ebp, esp                                                      ; ebp - Prepared to be used as data pointer.
                        add   ebp, (dword.l + cs.packet)                                    ; ebp - Data pointer.

                        mov   eax, dword [ebp + cs.packet.collection]                       ; eax - Pointer to collection file data.
                        add   eax, dword.l                                                  ; eax - Pointer to buffer for convert.bunary.id.to.ascii.id.

                        push  eax                                                           ; Point convert.binary.id.to.ascii.id to socket filename.
                        push  dword [ebp + cs.packet.socket]                                ; Point convert.binary.id.to.ascii.id to socket indicator.
                        call  convert.binary.id.to.ascii.id                                 ; Populate the filename for the socket to be cleaned.

                        push  dword [ebp + cs.packet.socket]                                ; Point open.descriptor to socket to be cleaned.
                        call  open.descriptor                                               ; Attempt to associate a descriptor with the socket file.

                        or    eax, eax                                                      ; Did we associate a descriptor with the socket file?
                        js    clean.socket.done                                             ; No. Exit with error.

                        mov   edx, dword [ebp + cs.packet.collection]                       ; edx - Pointer to socket collection.

                        cmp   edx, egg.filename                                             ; Are we cleaning egg sockets?
                        jz    clean.socket.egg                                              ; Yes. Go clean the socket.

                        cmp   edx, gylf.filename                                            ; Are we cleaning gylf sockets?
                        jz    clean.socket.gylf                                             ; Yes. Go clean the socket.

                        cmp   edx, ghost.filename                                           ; Are we cleaning ghost sockets?
                        jz    clean.socket.ghost                                            ; Yes. Go clean the socket.

                        mov   eax, 0FFFFFFFFh                                               ; If we're here, we got a bad collection. Set eax to error status.

    clean.socket.done:  ret   cs.packet                                                     ; Return to caller.

;------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

    clean.socket.egg:   push  eax                                                           ; Preserve descriptor for socket file for close.descriptor.

                        push  egg_size                                                      ; Tell read descriptor to read an entire egg.
                        push  e.data                                                        ; Tell read.descriptor to read it into the space at e.data.
                        push  eax                                                           ; Tell read.descriptor to read from the descriptor we just associated with the socket.
                        call  read.descriptor                                               ; Read the socket.

                        call  close.descriptor                                              ; Close the socket file.

                        push  dword [e.data + egg.connection.descriptor.index]              ; Point close.descriptor to the socket associated with the connection to be cleaned.
                        call  close.descriptor                                              ; Disassociate that descriptor.

                        mov   dword [e.data + egg.connection.descriptor.index], 00000000h   ; Scrub evidence of the previous connection.
                        mov   byte [e.data + egg.connection.status.index], 00h              ; Reset socket status.

                        push  dword [ebp + cs.packet.socket]                                ; Point open.descriptor to the socket to be cleaned.
                        call  open.descriptor                                               ; Reassociate a descriptor with the socket file.

                        push  eax                                                           ; Preserve descriptor for socket file for close.descriptor.

                        push  eax                                                           ; Point write.descriptor to the socket to be cleaned.
                        push  e.data                                                        ; Point write descriptor to the new socket data.
                        push  egg_size                                                      ; Tell write descriptor to write the entire egg.
                        call  write.descriptor                                              ; Write the new data to file.

                        call  close.descriptor                                              ; Disassociate the descriptor from the socket file.

                        sub   eax, eax                                                      ; Set eax to no error status.
                        jmp   clean.socket.done                                             ; Go return to caller.

;------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

    clean.socket.gylf:  push  eax                                                           ; Preserve descriptor for socket file for close.descriptor.

                        push  gylf_size                                                     ; Tell read descriptor to read an entire gylf.
                        push  g.data                                                        ; Tell read.descriptor to read it into the space at g.data.
                        push  eax                                                           ; Tell read.descriptor to read from the descriptor we just associated with the socket.
                        call  read.descriptor                                               ; Read the socket.

                        call  close.descriptor                                              ; Close the socket file.

                        push  dword [g.data + gylf.connection.descriptor.index]             ; Point close.descriptor to the socket associated with the connection to be cleaned.
                        call  close.descriptor                                              ; Disassociate that descriptor.

                        mov   dword [g.data + gylf.connection.descriptor.index], 00000000h  ; Scrub evidence of the previous connection.
                        mov   byte [g.data + gylf.connection.status.index], 00h             ; Reset socket status.

                        push  dword [ebp + cs.packet.socket]                                ; Point open.descriptor to the socket to be cleaned.
                        call  open.descriptor                                               ; Reassociate a descriptor with the socket file.

                        push  eax                                                           ; Preserve descriptor for socket file for close.descriptor.

                        push  eax                                                           ; Point write.descriptor to the socket to be cleaned.
                        push  g.data                                                        ; Point write descriptor to the new socket data.
                        push  gylf_size                                                     ; Tell write descriptor to write the entire gylf.
                        call  write.descriptor                                              ; Write the new data to file.

                        call  close.descriptor                                              ; Disassociate the descriptor from the socket file.

                        sub   eax, eax                                                      ; Set eax to no error status.
                        jmp   clean.socket.done                                             ; Go return to caller.


;------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

    clean.socket.ghost: push  eax                                                           ; Preserve descriptor for socket file for close.descriptor.

                        push  ghost_size                                                    ; Tell read descriptor to read an entire ghost.
                        push  d.data                                                        ; Tell read.descriptor to read it into the space at d.data.
                        push  eax                                                           ; Tell read.descriptor to read from the descriptor we just associated with the socket.
                        call  read.descriptor                                               ; Read the socket.

                        call  close.descriptor                                              ; Close the socket file.

                        push  dword [d.data + ghost.connection.descriptor.index]            ; Point close.descriptor to the socket associated with the connection to be cleaned.
                        call  close.descriptor                                              ; Disassociate that descriptor.

                        mov   dword [d.data + ghost.connection.descriptor.index], 00000000h ; Scrub evidence of the previous connection.
                        mov   byte [d.data + ghost.connection.status.index], 00h            ; Reset socket status.

                        push  dword [ebp + cs.packet.socket]                                ; Point open.descriptor to the socket to be cleaned.
                        call  open.descriptor                                               ; Reassociate a descriptor with the socket file.

                        push  eax                                                           ; Preserve descriptor for socket file for close.descriptor.

                        push  eax                                                           ; Point write.descriptor to the socket to be cleaned.
                        push  d.data                                                        ; Point write descriptor to the new socket data.
                        push  ghost_size                                                    ; Tell write descriptor to write the entire ghost.
                        call  write.descriptor                                              ; Write the new data to file.

                        call  close.descriptor                                              ; Disassociate the descriptor from the socket file.

                        sub   eax, eax                                                      ; Set eax to no error status.
                        jmp   clean.socket.done                                             ; Go return to caller.
