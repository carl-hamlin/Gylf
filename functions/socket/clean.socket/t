;================================================================================================================================================================================================
;
;   ./functions/socket/clean.socket/t
;
;   This code removes the data associated with an active socket from memory, smokes the lock file, and uses the close.descriptor function to close out the socket. This function does not
;   closeout other files associated with the socket - that responsibility is left to the caller.
;
;   Assumptions:    esi = Index to connection tables.
;
;   Returns:        None.
;
;------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
;
;   Symbolic Cross-Referencing
;
;   close.descriptor            ./functions/close.descriptor/t
;
;   connection.descriptor.index ./functions/main/system.check/b
;
;   connection.filename.index   ./functions/main/system.check/b
;
;   connection.status.index     ./functions/main/system.check/b
;
;   lock.extension              ./functions/create.lock.file/d
;
;   lock.extension.l            ./functions/create.lock.file/d
;
;   socket.filename.entry.l     ./functions/b
;
;   sys.system.call             ./functions/b
;
;   sys.unlink                  ./functions/socket/clean.socket/b
;
;   ul.smoke                    ./functions/socket/clean.socket/t
;
;   ul.loop                     ./functions/socket/clean.socket/t
;

    clean.socket: push  ecx                                            ; Preserve caller's ecx register.
                  mov   ebx, dword [esi+connection.descriptor.index]   ; ebx = Descriptor associated with target socket.
                  call  close.descriptor                               ; Disassociate the descriptor and shut down the socket.
            
                  mov   dword [esi+connection.descriptor.index], 0000h ; Smoke the stored descriptor for the defunct socket.
                  mov   byte [esi+connection.status.index], 00h        ; Smoke the stored status for the defunct socket.
                  sub   eax, eax                                       ; eax = Zeroes for smoking the stored filename for the defunct socket's user credentials.
                  mov   ecx, socket.filename.entry.l                   ; ecx = Number of times to write the zeroes to fill the entire filename entry.

                  mov   edi, esi                                       ; edi - Index to socket entry.
                  add   edi, connection.filename.index                 ; edi - Pointer to socket filename entry.
                  repnz stosb                                          ; Smoke the stored filename for the defunct socket.
                  pop   ecx                                            ; Restore caller's ecx register.

                  ret                                                  ; Return to caller.
