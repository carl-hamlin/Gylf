;================================================================================================================================================================================================
;
;   ./functions/socket/recv.from.socket/t
;
;   This function receives data from a connected socket and places it in a specified buffer.
;
;   Assumptions:    esi - Index to connection tables.
;
;   Returns:        None.
;
;------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
;
;   Symbolic Cross-Referencing
;
;   a.p.data.gylf               ./b
;
;   buffer.1                    ./functions/b
;
;   buffer.1.l                  ./functions/b
;
;   buffer.strip                ./functions/buffer.strip/t
;
;   dword.l                     ./b
;
;   sys.socket.call             ./functions/socket/b
;
;   sys.socket.recv             ./functions/socket/recv.from.socket/b
;
;   sys.system.call             ./functions/b
;

    recv.from.socket: pop   ebp                                                       ; Preserve return address.

                      push  0                                                         ; Flags for receive function.
                      push  buffer.1.l                                                ; Tell receive function how long the buffer is.
                      push  buffer.1                                                  ; Point receive function to buffer.1.
                      push  dword [a.p.data.gylf + gylf.connection.descriptor.index]  ; Point receive function to active socket.

                      mov   eax, sys.socket.call                                      ; eax - Socket call indicator.
                      mov   ebx, sys.socket.recv                                      ; ebx - Receive from socket.
                      mov   ecx, esp                                                  ; ecx - Pointer to arguments package.
                      int   sys.system.call                                           ; Receive from socket.

                      push  eax                                                       ; Tell buffer.strip how many characters to check.
                      push  buffer.1                                                  ; Pointer buffer.strip to buffer.1.
                      call  buffer.strip                                              ; Strip carriage returns from received data.

                      push  ebp                                                       ; Restore return address.
                      ret   (dword.l * 4)                                             ; Return to caller.
