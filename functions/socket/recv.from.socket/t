;================================================================================================================================================================================================
;
;   ./functions/socket/recv.from.socket/t
;
;   This function receives data from a connected socket and places it in a specified buffer.
;
;   Assumptions:    esi = Index to connection tables.
;
;   Returns:        None.
;
;------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
;
;   Symbolic Cross-Referencing
;
;   buffer.1                            ./functions/b
;
;   buffer.1.l                          ./functions/b
;
;   buffer.strip                        ./functions/buffer.strip/t
;
;   connection.descriptor.index         ./functions/main/system.check/b
;
;   socket.data.send.buffer.l           ./functions/socket/recv.from.socket/d
;
;   socket.data.send.buffer.pointer     ./functions/socket/recv.from.socket/d
;
;   socket.data.send.socket.descriptor  ./functions/socket/recv.from.socket/d
;
;   sys.socket.call                     ./functions/socket/b
;
;   sys.socket.recv                     ./functions/socket/recv.from.socket/b
;
;   sys.system.call                     ./functions/b
;

   recv.from.socket: mov  eax, dword [esi+connection.descriptor.index]      ; eax = Descriptor associated with target socket.
                      mov  dword [socket.data.send.socket.descriptor], eax   ; Point recv.from.socket to target socket.
                      mov  dword [socket.data.send.buffer.pointer], buffer.1 ; Point recv.from.socket to data buffer.
                      mov  dword [socket.data.send.buffer.l], buffer.1.l     ; Provide length of buffer.

                      mov  eax, sys.socket.call                              ; eax = Socket call indicator.
                      mov  ebx, sys.socket.recv                              ; ebx = Receive from socket.
                      mov  ecx, socket.data.send.socket.descriptor           ; ecx = Pointer to arguments package.
                      int  sys.system.call                                   ; Receive from socket.

                      mov  ebx, dword [socket.data.send.buffer.pointer]      ; ebx - pointer to received data
                      call buffer.strip                                      ; Strip carriage returns from received data.

                      ret                                                    ; Return to caller.
