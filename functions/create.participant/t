;================================================================================================================================================================================================
;
;   ./functions/create.participant/t
;
;   This function builds out participant data on the basis of the DNA sequences provided by the parents of the egg.
;
;   Assumptions:    eax - Descriptor associated with an egg file.
;                   esi - Index to socket entry.
;
;   Returns:        None.
;
;------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
;
;   Symbolic Cross-Referencing
;
;   ./b                                               a.p.data.gylf
;                                                     dword.l
;                                                     e.data
;                                                     g.data
;
;   ./commands/area/b                                 area.description
;                                                     area.description.l
;                                                     area.header
;                                                     area.header.l
;
;   ./functions/b                                     buffer.1
;                                                     buffer.2
;                                                     id.size
;
;   ./functions/clean.socket/t                        clean.socket
;
;   ./functions/close.descriptor/t                    close.descriptor
;
;   ./functions/create.file/t                         create.file
;
;   ./functions/create.participant/t                  area.filename.increment.cmp
;                                                     area.filename.next.digit.increment
;                                                     area.filename.out.of.ids
;                                                     area.name
;                                                     area.name.l
;                                                     build.pouch
;                                                     build.pouch.area.name
;                                                     build.pouch.found.open.id
;                                                     build.pouch.increment.byte
;
;   ./functions/d                                     area.filename
;                                                     pouch.declaration
;                                                     pouch.declaration.l
;                                                     pouch.description
;                                                     pouch.description.l
;
;   ./functions/dna.lab/t                             dna.lab
;
;   ./functions/main/system.check/b                   connection.filename.index
;
;   ./functions/main/text.init/b                      text.data.index.local.data.out.of.area.ids.message
;                                                     text.data.index.socket.data.out.of.area.ids.message
;
;   ./functions/open.descriptor/t                     open.descriptor
;
;   ./functions/read.descriptor/t                     read.descriptor
;
;   ./functions/socket/communications/send.to.area/t  send.to.area
;
;   ./functions/socket/socket.send/t                  socket.send
;
;   ./functions/write.console/t                       write.console
;
;   ./functions/write.descriptor/t                    write.descriptor
;
;   ./s                                               egg.area.id
;                                                     egg.e.parent.name
;                                                     egg.e.parent.name.l
;                                                     egg.i.parent.name
;                                                     egg.i.parent.name.l
;                                                     gylf.e.parent.name
;                                                     gylf.e.parent.name.l
;                                                     gylf.i.parent.name
;                                                     gylf.i.parent.name.l
;                                                     gylf.name
;                                                     gylf.pouch
;


    create.participant:                 push  egg_size                                                    ; Tell read.descriptor the length of egg data.
                                        push  e.data                                                      ; Point read.descriptor to buffer in which to store the egg data.
                                        push  eax                                                         ; Point read.descriptor to descriptor associated with the egg file.
                                        call  read.descriptor                                             ; Read the egg data into the buffer.

                                        call  close.descriptor                                            ; Close the egg file.

    create.participant.gylf.command:    push  esi                                                         ; Preserve index to socket entry.

                                        sub   ecx, ecx                                                    ; ecx - Prepared for loading.
                                        mov   cl, byte [e.data + egg.e.parent.name.l]                     ; ecx - length of laying parent's name.
                                        mov   esi, e.data + egg.e.parent.name                             ; esi - pointer to laying parent's name.
                                        mov   edi, g.data + gylf.e.parent.name                            ; edi - pointer to entry for laying parent's name on character template.

                                        mov   byte [g.data + gylf.e.parent.name.l], cl                    ; Store length of laying parent's name in character template.
                                        repnz movsb                                                       ; Store laying parent's name in character template.

                                        sub   ecx, ecx                                                    ; ecx - Prepared for loading.
                                        mov   cl, byte [e.data + egg.i.parent.name.l]                     ; ecx - length of inseminating parent's name.
                                        mov   esi, e.data + egg.i.parent.name                             ; esi - pointer to inseminating parent's name.
                                        mov   edi, g.data + gylf.i.parent.name                            ; edi - pointer to entry for inseminating parent's name on character template.

                                        mov   byte [g.data + gylf.i.parent.name.l], cl                    ; Store length of inseminating parent's name in character template.
                                        repnz movsb                                                       ; Store inseminating parent's name in character template.

                                        pop   esi                                                         ; Restore index to socket entry.

                                        mov   ebp, 00000001h                                              ; ebp - current area id.

;------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

    build.pouch:                        push  esi                                                         ; Preserve index to socket entry.

                                        push  area.filename                                               ; Point open.descriptor to filename for area to be created.
                                        call  open.descriptor                                             ; Attempt to associate a descriptor with the file.

                                        or    eax, eax                                                    ; Were we able to associate a descriptor with the filename?
                                        js    build.pouch.found.open.id                                   ; No. We've found an open id to use - let's go use it.

                                        mov   ebx, eax                                                    ; Yes. Let's close it up so we can search the next id up the ladder. ebx - descriptor
                                                                                                          ; to be disassociated.
                                        call  close.descriptor                                            ; Disassociate that descriptor.

                                        inc   ebp                                                         ; ebp - next area id to check.
                                        mov   esi, area.filename+id.size                                  ; esi - pointer to area filename.

                                        jmp   area.filename.increment.cmp                                 ; Go see if we've traversed the entire filename.

;------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

    build.pouch.increment.byte:         inc   byte [esi]                                                  ; No. Increment the byte.

                                        jmp   build.pouch                                                 ; Try the new area id.

;------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

    area.filename.next.digit.increment: mov   byte [esi], 00h                                             ; Zero the current byte...
                                        dec   esi                                                         ; Move up the filename to the next byte...

;------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

    area.filename.increment.cmp:        cmp   esi, area.filename-1                                        ; Have we traversed the entire filename?
                                        jz    area.filename.out.of.ids                                    ; Yes. Go display an error on local and remote terminals and disconnect the socket.

                                        cmp   byte [esi], 39h                                             ; Is the byte a 9?
                                        jz    area.filename.next.digit.increment                          ; Yes. Zero it and move up the filename to the next digit.

                                        jmp   build.pouch.increment.byte                                  ; No. Increment the byte and try the next id.

;------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

    area.filename.out.of.ids:           pop   esi                                                         ; esi - Index to socket entry.

                                        push  dword [text.data.index.socket.data.out.of.area.ids.message] ; Point send function to message indicating that we're fresh out of area ids.
                                        call  socket.send                                                 ; Send the message on the socket.

                                        call  clean.socket                                                ; Disconnect the current socket.

                                        push  dword [text.data.index.local.data.out.of.area.ids.message]  ; Pointer to local message indicating that we're fresh out of area ids.
                                        call  write.console                                               ; Tell the admin that we're fresh out of area ids.

                                        ret                                                               ; Return to caller.

;------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

    build.pouch.found.open.id:          push  dword [text.data.index.socket.data.egg.hatch.message]       ; Point send function to index for message indicating an egg is about to hatch.
                                        push  egg.area.id                                                 ; Tell send function what area to send to.
                                        call  send.to.area                                                ; Tell the area where the egg is sitting that the egg is beginning to hatch.

                                        pop   esi                                                         ; esi - Index to socket entry.

                                        mov   dword [g.data + gylf.pouch], ebp                            ; Store area id for character pouch.
                                        push  area.filename                                               ; Point create.file to file to be created for character pouch.
                                        call  create.file                                                 ; Create the file.

                                        push  eax                                                         ; Store descriptor associated with new pouch.

                                        sub   al, al                                                      ; al - prepared for use as counter.

                                        push  esi                                                         ; Preserve index to socket entry.

                                        mov   esi, a.p.data.gylf + gylf.name                              ; esi - pointer to socket filename.
                                        mov   edi, area.name                                              ; edi - pointer to buffer for area name.

;------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

    build.pouch.area.name:              movsb                                                             ; Store a byte of the filename.
                                        inc   al                                                          ; Add a byte to the size of the filename.

                                        cmp   byte [esi], 00h                                             ; Have we reached the end of the filename?
                                        jnz   build.pouch.area.name                                       ; Nope. Go store the rest of the filename.

                                        add   al, pouch.declaration.l                                     ; al - length of filename+length of pouch declaration.

                                        mov   byte [area.name.l], al                                      ; Store length of filename + length of pouch declaration.
                                        mov   esi, pouch.declaration                                      ; esi - pointer to pouch declaration.
                                        mov   ecx, pouch.declaration.l                                    ; ecx - length of pouch declaration.
                                        repnz movsb                                                       ; Write pouch declaration to area.name.

                                        mov   byte [area.description.l], pouch.description.l              ; Store length of pouch description.
                                        mov   esi, pouch.description                                      ; esi - pointer to pouch description.
                                        mov   edi, area.description                                       ; edi - pointer to storage for are description.
                                        mov   ecx, pouch.description.l                                    ; ecx - length of pouch description.
                                        repnz movsb                                                       ; Write pouch description to storage for area description.

                                        pop   esi                                                         ; Restore index to socket entry.
                                        pop   ebx                                                         ; Restore descriptor associated with pouch.

                                        push  ebx                                                         ; Descriptor associated with pouch.
                                        push  area.header                                                 ; Pointer to area header.
                                        push  area.header.l                                               ; Length of area header.
                                        call  write.descriptor                                            ; Write area header for pouch to area file.

                                        call  close.descriptor                                            ; Disassociate the descriptor with the area file.

                                        call  dna.lab                                                     ; Figure up the DNA for the new Gylf.

                                        mov   ebx, esi                                                    ; ebx - Index to socket table.
                                        push  a.p.data.gylf + gylf.name                                   ; Point create.file to filename associated with active connection.
                                        call  create.file                                                 ; Smoke the egg and create a new file.

                                        push  eax                                                         ; Preserve descriptor associated with new file.

                                        push  eax                                                         ; Point write function to new file.
                                        push  buffer.2                                                    ; Pointer to length of passphrase data.
                                        push  dword.l                                                     ; Length of passphrase data.
                                        call  write.descriptor                                            ; Write length of passphrase data to new file.

                                        pop   eax                                                         ; Restore descriptor associated with new file.
                                        push  eax                                                         ; Preserve descriptor associated with new file.

                                        push  eax                                                         ; Point write function to new file.
                                        push  buffer.1                                                    ; Pointer to received passphrase data.
                                        push  dword [buffer.2]                                            ; Length of passphrase data.
                                        call  write.descriptor                                            ; Write passphrase data to new file.

                                        pop   eax                                                         ; Restore descriptor associated with new file.
                                        push  eax                                                         ; Preserve descriptor associated with new file.

                                        push  eax                                                         ; Point write function to new file.
                                        push  g.data                                                      ; Pointer to generated character data.
                                        push  gylf_size                                                   ; Length of character data.
                                        call  write.descriptor                                            ; Write character data to new file.

                                        pop   eax                                                         ; Restore descriptor associated with new file.
                                        call  close.descriptor                                            ; Disassociate descriptor.

                                        ret                                                               ; Return to caller.
