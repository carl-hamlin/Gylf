;================================================================================================================================================================================================
;
;   ./functions/memory.switch/t
;
;   This function calls the linux kernel and causes it to allocate the specified number of bytes of memory for temporary use.
;
;   Assumptions:    Stack Frame: dword [Number of bytes to allocate]
;
;   Returns:        ebx - Pointer to new memory.
;
;------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
;
;   Symbolic Cross-Referencing
;
;   break.pointer             ./functions/memory.switch/d
;
;   dword.l                   ./b
;
;   memory.switch.initialize  ./functions/memory.switch/t
;
;   memory.switch.initilized  ./functions/memory.switch/t
;
;   sys.mem                   ./functions/memory.switch/b
;
;   sys.system.call           ./functions/b
;

    memory.switch:              push  ebp                                           ; Preserve caller's ebp.

                                mov   ebp, esp                                      ; ebp - Pointer to stack.
                                add   ebp, (dword.l + memory.switch.packet_size)    ; ebp - Pointer to number of bytes to allocate.

                                push  eax                                           ; Preserve caller's eax register.
                                push  ecx                                           ; Preserve caller's ecx register.
                                push  edi                                           ; Preserve caller's edi register.

                                mov   eax, dword [break.pointer]                    ; eax - Pointer to end of OS-defined program memory, or indicator that we have yet to initialize memory management.

                                cmp   eax, 0                                        ; Have we already initialized?
                                jz    memory.switch.initialize                      ; No. Go initialize memory management.

    memory.switch.initialized:  mov   ebx, eax                                      ; ebx - Pointer to end of OS-defined program memory.
                                add   ebx, dword [ebp - memory.switch.packet.bytes] ; ebx - Pointer to where we want memory to end.
                                mov   eax, sys.mem                                  ; eax - sys.mem: Linux syscall memory management.
                                int   sys.system.call                               ; Extend memory.

                                sub   ebx, dword [ebp]                              ; ebx - Pointer to new memory.

                                mov   edi, ebx                                      ; edi - Pointer to new memory.
                                mov   ecx, dword [ebp]                              ; ecx - Number of bytes to sterilize.
                                sub   al, al                                        ; al - Zero for memory sterilization.

                                repnz stosb                                         ; Sterilize new memory.

                                pop   edi                                           ; Restore caller's edi register.
                                pop   ecx                                           ; Restore caller's ecx register.
                                pop   eax                                           ; Restore caller's eax register.

                                pop   ebp                                           ; Restore caller's ebp.

                                ret   (memory.switch.packet_size)                   ; Return to caller.

    memory.switch.initialize:   sub   ebx, ebx                                      ; ebx - Indicator that we're initializing memory management.
                                mov   eax, sys.mem                                  ; eax - sys.mem: Linux syscall memory management.
                                int   sys.system.call                               ; Initialize memory management.

                                mov   dword [break.pointer], eax                    ; Store pointer to end of OS-defined program memory.
                                jmp   memory.switch.initialized                     ; Now that memory management has been initialized, go take care of that request.
