;================================================================================================================================================================================================
;
;   ./functions/get.participant.data/t
;
;   This function populates the participant data for the target participant.
;
;   Assumptions:  Stack Frame:  dword - Length of name of target participant.
;                               dword - Pointer to name of target participant.
;                               dword - Pointer to destination, and indicator of type.
;
;   Returns:      Requested data, or error.
;
;------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
;
;   Symbolic Cross-Referencing
;
;   assemble.path           ./functions/assemble.path/t
;
;   buffer.1                ./b
;
;   close.descriptor        ./functions/close.descriptor/t
;
;   d.data                  ./b
;
;   e.data                  ./b
;
;   egg_size                ./s
;
;   egg.directory           ./functions/d
;
;   egg.directory.l         ./functions/d
;
;   g.data                  ./b
;
;   get.participant.data.d  ./functions/get.participant.data/t
;
;   get.participant.data.e  ./functions/get.participant.data/t
;
;   get.participant.data.ez ./functions/get.participant.data/t
;
;   get.participant.data.g  ./functions/get.participant.data/t
;
;   get.participant.data.gz ./functions/get.participant.data/t
;
;   get.participant.data.r  ./functions/get.participant.data/t
;
;   get.participant.data.z  ./functions/get.participant.data/t
;
;   ghost_size              ./s
;
;   ghost.directory         ./functions/d
;
;   ghost.directory.l       ./functions/d
;
;   gpd.packet_size         ./functions/get.participant.data/s
;
;   gpd.packet.destination  ./functions/get.participant.data/s
;
;   gpd.packet.name.l       ./functions/get.participant.data/s
;
;   gpd.packet.name.p       ./functions/get.participant.data/s
;
;   gylf_size               ./s
;
;   gylf.directory          ./functions/d
;
;   gylf.directory.l        ./functions/d
;
;   read.descriptor         ./functions/read.descriptor/t
;
;   open.descriptor         ./functions/open.descriptor/t
;

    get.participant.data:     mov   ebp, esp
                              add   ebp, gpd.packet_size

                              cmp   dword [ebp.destination], e.data
                              jz    get.participant.data.e

                              cmp   dword [ebp.destination], g.data
                              jz    get.participant.data.g

                              cmp   dword [ebp.destination], d.data
                              jz    get.participant.data.d

;------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

    get.participant.data.z:   mov   eax, FFFFFFFFh
                              ret                        

;------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

    get.participant.data.g:   push  gylf.directory
                              push  gylf.directory.l
                              jmp   get.participant.data.r

;------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

    get.participant.data.e:   push  egg.directory
                              push  egg.directory.l
                              jmp   get.participant.data.r

;------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

    get.participant.data.d:   push  ghost.directory
                              push  ghost.directory.l

;------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

    get.participant.data.r:   push  dword [ebp.name.p]
                              push  dword [ebp+name.l]
                              call  assemble.path

                              push  buffer.1
                              call  open.descriptor

                              or    eax, eax
                              js    get.participant.data.z

                              cmp   dword [ebp.destination], e.data
                              jz    get.participant.data.ez

                              cmp   dword [ebp.destination], g.data
                              jz    get.participant.data.gz

                              push  ghost_size
                              push  d.data

;------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

    get.participant.data.zz:  push  eax
                              call  read.descriptor

                              mov   ebx, eax
                              call  close.descriptor

                              ret   gpd.packet_size   ; Return to caller.

;------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

    get.participant.data.ez:  push  egg_size
                              push  e.data
                              jmp get.participant.data.zz

;------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

    get.participant.data.gz:  push  gylf_size
                              push  g.data
                              jmp get.participant.data.zz
