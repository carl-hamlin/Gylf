;------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
;
;   ./functions/write.bad.command.error/t
;
;   This function lets the user know that they've entered a bad command and suggests that they try HELP.
;
;   Assumptions:    esi - Pointer to descriptor associated with target socket.
;
;   Returns:        None.
;
;------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
;
;   Symbolic Cross-Referencing
;
;   ./functions/main/text.init/b              text.data.index.socket.data.bad.command.error.message
;
;   ./functions/socket/answer.active.socket/s answer.active.socket.packet.active
;
;   ./functions/socket/socket.send/t          socket.send
;
;   ./functions/write.prompt/t                write.prompt
;

    write.bad.command.error:  pusha                                                               ; Preserve caller's registers.

                              mov   ebx, dword [ebp - answer.active.socket.packet.active]         ; ebx - Pointer to active socket.

                              push  dword [ebx]                                                   ; Point send function to active socket.
                              push  dword 00000000h                                               ; No buffered data.
                              push  dword 00000000h                                               ; No buffered length.
                              push  dword [text.data.index.socket.data.bad.command.error.message] ; Point send command to the bad command error message.
                              call  socket.send                                                   ; Tell the user that the command doesn't have a current analogue.

                              call  write.prompt                                                  ; Restore the user's prompt.

                              popa                                                                ; Restore caller's registers.
                              ret                                                                 ; Return to caller.
